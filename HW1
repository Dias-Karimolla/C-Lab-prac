using System;
using System.Collections.Generic;

namespace LibraryManagement
{
    class Book
    {
        public string Title { get; set; }
        public string Author { get; set; }
        public string ISBN { get; set; }
        public int Copies { get; set; }

        public Book(string title, string author, string isbn, int copies)
        {
            Title = title;
            Author = author;
            ISBN = isbn;
            Copies = copies;
        }

        public override string ToString()
        {
            return $"{Title} by {Author}, ISBN: {ISBN}, Copies: {Copies}";
        }
    }

    class Reader
    {
        public string Name { get; set; }
        public int ReaderId { get; set; }

        public Reader(string name, int readerId)
        {
            Name = name;
            ReaderId = readerId;
        }

        public override string ToString()
        {
            return $"Reader: {Name}, ID: {ReaderId}";
        }
    }

    class Library
    {
        private List<Book> books = new List<Book>();
        private List<Reader> readers = new List<Reader>();

        public void AddBook(Book book)
        {
            books.Add(book);
            Console.WriteLine($"Book '{book.Title}' added to the library.");
        }

        public void RemoveBook(Book book)
        {
            books.Remove(book);
            Console.WriteLine($"Book '{book.Title}' removed from the library.");
        }

        public void RegisterReader(Reader reader)
        {
            readers.Add(reader);
            Console.WriteLine($"Reader '{reader.Name}' registered.");
        }

        public void RemoveReader(Reader reader)
        {
            readers.Remove(reader);
            Console.WriteLine($"Reader '{reader.Name}' removed.");
        }

        public void LendBook(string isbn, Reader reader)
        {
            Book book = books.Find(b => b.ISBN == isbn);
            if (book != null && book.Copies > 0)
            {
                book.Copies--;
                Console.WriteLine($"Book '{book.Title}' lent to {reader.Name}. Copies left: {book.Copies}");
            }
            else
            {
                Console.WriteLine($"Book with ISBN {isbn} is not available.");
            }
        }

        public void ReturnBook(string isbn, Reader reader)
        {
            Book book = books.Find(b => b.ISBN == isbn);
            if (book != null)
            {
                book.Copies++;
                Console.WriteLine($"Book '{book.Title}' returned by {reader.Name}. Copies available: {book.Copies}");
            }
        }

        public void ListBooks()
        {
            Console.WriteLine("Books in the library:");
            books.ForEach(book => Console.WriteLine(book));
        }

        public void ListReaders()
        {
            Console.WriteLine("Registered readers:");
            readers.ForEach(reader => Console.WriteLine(reader));
        }
    }

    class Program
    {
        static void Main(string[] args)
        {
            Library library = new Library();

            Book book1 = new Book("1984", "George Orwell", "123456789", 3);
            Book book2 = new Book("To Kill a Mockingbird", "Harper Lee", "987654321", 2);

            Reader reader1 = new Reader("John Doe", 1);
            Reader reader2 = new Reader("Jane Smith", 2);

            library.AddBook(book1);
            library.AddBook(book2);

            library.RegisterReader(reader1);
            library.RegisterReader(reader2);

            library.ListBooks();
            library.ListReaders();

            library.LendBook("123456789", reader1);
            library.LendBook("987654321", reader2);

            library.ListBooks();

            library.ReturnBook("123456789", reader1);
            library.ListBooks();

            library.RemoveBook(book1);
            library.RemoveReader(reader1);

            library.ListBooks();
            library.ListReaders();
        }
    }
}
  
