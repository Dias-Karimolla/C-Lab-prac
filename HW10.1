using System;
using System.Collections.Generic;

public abstract class FileSystemComponent
{
    protected string _name;

    public FileSystemComponent(string name)
    {
        _name = name;
    }

    public abstract void Display(int depth);
    public abstract int GetSize();

    public virtual void Add(FileSystemComponent component)
    {
        throw new NotImplementedException();
    }

    public virtual void Remove(FileSystemComponent component)
    {
        throw new NotImplementedException();
    }

    public virtual FileSystemComponent GetChild(int index)
    {
        throw new NotImplementedException();
    }

    public string Name => _name;
}

public class File : FileSystemComponent
{
    private int _size;

    public File(string name, int size) : base(name)
    {
        _size = size;
    }

    public override void Display(int depth)
    {
        Console.WriteLine(new string('-', depth) + " File: " + _name + " (" + _size + " KB)");
    }

    public override int GetSize()
    {
        return _size;
    }
}

public class Directory : FileSystemComponent
{
    private List<FileSystemComponent> _children = new List<FileSystemComponent>();

    public Directory(string name) : base(name) { }

    public override void Add(FileSystemComponent component)
    {
        if (!_children.Contains(component))
        {
            _children.Add(component);
        }
        else
        {
            Console.WriteLine($"{component.Name} already exists in {this.Name}");
        }
    }

    public override void Remove(FileSystemComponent component)
    {
        if (_children.Contains(component))
        {
            _children.Remove(component);
        }
        else
        {
            Console.WriteLine($"{component.Name} not found in {this.Name}");
        }
    }

    public override void Display(int depth)
    {
        Console.WriteLine(new string('-', depth) + " Directory: " + _name);
        foreach (var component in _children)
        {
            component.Display(depth + 2);
        }
    }

    public override int GetSize()
    {
        int totalSize = 0;
        foreach (var component in _children)
        {
            totalSize += component.GetSize();
        }
        return totalSize;
    }
}

class Program
{
    static void Main(string[] args)
    {
        Directory root = new Directory("Root");
        File file1 = new File("File1.txt", 100);
        File file2 = new File("File2.txt", 200);

        Directory subDir = new Directory("SubDirectory");
        File subFile1 = new File("SubFile1.txt", 50);

        root.Add(file1);
        root.Add(file2);
        subDir.Add(subFile1);
        root.Add(subDir);

        root.Display(1);
        Console.WriteLine("\nTotal size of Root directory: " + root.GetSize() + " KB");
    }
}
